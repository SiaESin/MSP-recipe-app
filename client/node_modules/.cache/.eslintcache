[{"C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\index.js":"1","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\App.js":"2","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\auth.js":"3","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\create-recipes.js":"4","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\home.js":"5","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\saved-recipes.js":"6","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\components\\navbar.js":"7","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\hooks\\useGetUserID.js":"8"},{"size":242,"mtime":1692248858537,"results":"9","hashOfConfig":"10"},{"size":769,"mtime":1692248858536,"results":"11","hashOfConfig":"10"},{"size":2791,"mtime":1692238251764,"results":"12","hashOfConfig":"10"},{"size":3082,"mtime":1692328028345,"results":"13","hashOfConfig":"10"},{"size":2211,"mtime":1692301062188,"results":"14","hashOfConfig":"10"},{"size":1450,"mtime":1692308042650,"results":"15","hashOfConfig":"10"},{"size":845,"mtime":1692326490778,"results":"16","hashOfConfig":"10"},{"size":92,"mtime":1692238251762,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jf7bxp",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\index.js",[],[],"C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\App.js",[],[],"C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\auth.js",["46"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const Auth = () => {\r\n  return (\r\n    <div className='auth'>\r\n      <Login />\r\n      <Register />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const [_, setCookies] = useCookies(['access_token']);\r\n    \r\n    const navigate = useNavigate();\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n        const response = await axios.post('http://localhost:3001/auth/login', {\r\n            username,\r\n            password,\r\n        });\r\n\r\n    setCookies('access_token', response.data.token);\r\n    window.localStorage.setItem('userID', response.data.userID);\r\n    navigate('/');\r\n    } catch (e) {\r\n    console.error(e);\r\n    }\r\n};\r\n    return (\r\n        <Form \r\n        username={username}\r\n        setUsername={setUsername}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        label='Login'\r\n        onSubmit={onSubmit}\r\n        />\r\n    )\r\n}\r\n  const Register = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:3001/auth/register', {\r\n        username,\r\n        password,\r\n      });\r\n      alert('Registration Completed! Now logged in.');\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  return (\r\n    <Form \r\n    username={username}\r\n    setUsername={setUsername}\r\n    password={password}\r\n    setPassword={setPassword}\r\n    label='Register'\r\n    onSubmit={onSubmit}\r\n    />)\r\n  \r\n  \r\n};\r\n\r\nconst Form = ({username, setUsername, password, setPassword, label, onSubmit}) => {\r\n    return (\r\n        <div className='auth-container'>\r\n          <form onSubmit={onSubmit}>\r\n            <h2>{label}</h2>\r\n            <div className='form-group'>\r\n              <label htmlFor='username'>Username:</label>\r\n              <input\r\n                type='text'\r\n                id='username'\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className='form-group'>\r\n              <label htmlFor='password'>Password:</label>\r\n              <input\r\n                type='password'\r\n                id='password'\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n              />\r\n            </div>\r\n            <button type='submit'>{label}</button>\r\n          </form>\r\n        </div>\r\n      );\r\n}",[],"C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\create-recipes.js",["47","48"],[],"import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useGetUserID } from '../hooks/useGetUserID';\r\nimport { redirect } from \"react-router-dom\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport const CreateRecipes = () => {\r\n    const userID = useGetUserID();\r\n    const [cookies, _] = useCookies(['access_token']);\r\n    \r\n\r\n    const [recipe, setRecipe] = useState({\r\n        name: '',\r\n        ingredients: [],\r\n        instructions: '',\r\n        imageUrl: '',\r\n        cookingTime: 0,\r\n        userOwner: userID,\r\n    });\r\n    \r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setRecipe({...recipe, [name]: value});\r\n    }\r\n\r\n    const handleIngredientChange = (event, index) => {\r\n        const { value } = event.target;\r\n        const ingredients = recipe.ingredients;\r\n        ingredients[index] = value;\r\n        setRecipe({...recipe, ingredients});\r\n    }\r\n\r\n    const addIngredient = () => {\r\n        setRecipe({...recipe, ingredients: [...recipe.ingredients, \"\"] })\r\n    } \r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            await axios.post(\"http://localhost:3001/recipes\", recipe,\r\n            { headers: { authorization: cookies.access_token }});\r\n            alert('Recipe Added')\r\n          {return redirect(\"/\");}\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    return (\r\n    <div className='create-recipe'>\r\n        <h2> Create Recipe</h2>\r\n        <form onSubmit={onSubmit}>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"ingredients\">Ingredients</label>\r\n            {recipe.ingredients.map((ingredient, index) => (\r\n                <input\r\n                    key={index}\r\n                    type=\"text\"\r\n                    name=\"ingredients\"\r\n                    value={ingredient}\r\n                    onChange={(event) => handleIngredientChange(event, index)}\r\n                />\r\n            ))}\r\n            <button type=\"button\" onClick={addIngredient}>\r\n                Add Ingredient\r\n            </button>\r\n            <label htmlFor=\"instructions\">Instructions</label>\r\n            <textarea\r\n                id=\"instructions\"\r\n                name=\"instructions\"\r\n                onChange={handleChange}\r\n            ></textarea>\r\n            <label htmlFor=\"imageUrl\">Image URL</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"imageUrl\"\r\n                name=\"imageUrl\"\r\n                onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"cookingTime\">Cooking Time (minutes)</label>\r\n            <input\r\n                type=\"number\"\r\n                id=\"cookingTime\"\r\n                name=\"cookingTime\"\r\n                onChange={handleChange}\r\n            />\r\n            <button type='submit'>Create Recipe</button>\r\n        </form>\r\n    </div>\r\n    );\r\n}","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\home.js",["49","50"],[],"C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\pages\\saved-recipes.js",["51"],[],"import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useGetUserID } from '../hooks/useGetUserID';\r\n\r\nexport const SavedRecipes = () => {\r\n  const [savedRecipes, setSavedRecipes] = useState([]);\r\n  const userID = useGetUserID()\r\n  \r\n  useEffect(() => {\r\n    const fetchSavedRecipe = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/recipes/savedRecipes/${userID}`, \r\n        );\r\n        setSavedRecipes(response.data.savedRecipes)\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n\r\n    fetchSavedRecipe();\r\n  }, []);\r\n\r\n  return <div> <h1> Saved Recipes</h1>\r\n  <ul>\r\n    {savedRecipes.map((recipe) => (\r\n        <li key={recipe._id}>\r\n            <div>\r\n                <h2>{recipe.name}</h2>\r\n                {/* <button \r\n                onClick={() => saveRecipe(recipe._id)}\r\n                disabled={isRecipeSaved(recipe._id)}>\r\n                {isRecipeSaved(recipe._id) ? \"SAVED\" : \"Save\"}\r\n                </button> \r\n                Removing from saved recipes/delete?? */}\r\n            </div>\r\n            <div>\r\n                <img src={recipe.imageUrl} alt={recipe.name} />\r\n                <p> Cooking Time: {recipe.cookingTime} (minutes)</p>\r\n            </div>\r\n            <div className='instructions'>\r\n                <p>{recipe.instructions}</p>\r\n            </div>\r\n        </li>\r\n    ))}\r\n    \r\n    </ul> \r\n    </div>;\r\n};\r\n","C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\components\\navbar.js",[],[],"C:\\Users\\Sia\\Desktop\\MSP\\MSP-recipe-app\\client\\src\\hooks\\useGetUserID.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":19,"column":12,"nodeType":"54","messageId":"55","endLine":19,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":9,"column":21,"nodeType":"54","messageId":"55","endLine":9,"endColumn":22},{"ruleId":"56","severity":1,"message":"57","line":44,"column":11,"nodeType":"58","messageId":"59","endLine":44,"endColumn":34},{"ruleId":"52","severity":1,"message":"53","line":9,"column":19,"nodeType":"54","messageId":"55","endLine":9,"endColumn":20},{"ruleId":"60","severity":1,"message":"61","line":34,"column":6,"nodeType":"62","endLine":34,"endColumn":8,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":22,"column":6,"nodeType":"62","endLine":22,"endColumn":8,"suggestions":"65"},"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.access_token' and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["67"],{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [cookies.access_token, userID]",{"range":"72","text":"73"},"Update the dependencies array to be: [userID]",{"range":"74","text":"75"},[1026,1028],"[cookies.access_token, userID]",[613,615],"[userID]"]